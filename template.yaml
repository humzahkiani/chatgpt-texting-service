# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  chatgpt-texting-service

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: hello-from-lambda.js
  chatgptTextingServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/index.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A Lambda function that returns a static string.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole

  chatgptTextingServiceIngressTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: chatgpt-texting-service-ingress
      TopicName: chatgpt-texting-service-ingress

  chatgptTextingServicePermissionForSns:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt chatgptTextingServiceFunction.Arn
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref chatgptTextingServiceIngressTopic

  chatgptTextingServiceFunctionSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn: !Ref chatgptTextingServiceIngressTopic
      Endpoint: !GetAtt chatgptTextingServiceFunction.Arn

Outputs:
  ChatGPTTextingServiceFunctionArn:
    Description: ARN of the chatgpt-texting-service Lambda function
    Value: !GetAtt chatgptTextingServiceFunction.Arn
  ChatGPTTextingServiceIngressTopicArn:
    Description: ARN of the chatgpt-texting-service-ingress SNS topic
    Value: !Ref chatgptTextingServiceIngressTopic